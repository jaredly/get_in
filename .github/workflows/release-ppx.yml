name: npm release

on:
  push:
    branches:
      - master

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      # Check the issue
      - working-directory: .github/actions
        id: check
        run: node check.js

  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: check
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: setup
        run: npm i -g esy@latest

      - uses: actions/cache@v1
        with:
          path: ~/.esy
          key: ${{ runner.os }}-node-${{ hashFiles('esy.lock/**') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: build
        run: esy
      - name: cp-bin
        run: esy cp-bin
      - name: examples tests
        run: node examples/runTests.js

      - name: Upload artifacts ${{ matrix.os }}
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.os }}
          path: ppx

      - name: rm the esy build stuff, don't need to cache that
        run: rm -rf ~/.esy/3_*/b/

  publish:
    needs: build
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Download linux artifacts
        uses: actions/download-artifact@master
        with:
          name: ubuntu-latest
          path: binaries/linux

      - name: Download macOS artifacts
        uses: actions/download-artifact@master
        with:
          name: macOS-latest
          path: binaries/darwin

      - name: Download windows artifacts
        uses: actions/download-artifact@master
        with:
          name: windows-latest
          path: binaries/windows

      - name: Move artifacts
        run: |
          mkdir -p dist
          mv binaries/darwin/ppx dist/get_in_ppx-darwin-x64.exe
          mv binaries/windows/ppx dist/get_in_ppx-win-x64.exe
          mv binaries/linux/ppx dist/get_in_ppx-linux-x64.exe
          rm -rf binaries

      # Test out the package
      - name: pack it up & test it out
        run: |
          rm -rf get_in_ppx-*.tgz
          npm pack
          cd dist_examples/bsb-7
          npm i
          npm i ../../get_in_ppx-*.tgz
          npm run build

      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Tag it up
        run: |
          git tag $(node -e 'process.stdout.write(require("./package.json").version)')
          git push --tags https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}